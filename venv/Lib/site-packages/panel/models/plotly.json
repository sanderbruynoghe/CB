{"code": "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar p = require(\"core/properties\");\nvar object_1 = require(\"core/util/object\");\nvar html_box_1 = require(\"models/layouts/html_box\");\nvar PlotlyPlotView = /** @class */ (function (_super) {\n    __extends(PlotlyPlotView, _super);\n    function PlotlyPlotView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PlotlyPlotView.prototype.connect_signals = function () {\n        var _this = this;\n        _super.prototype.connect_signals.call(this);\n        this.connect(this.model.properties.data.change, this.render);\n        this.connect(this.model.properties.layout.change, this._relayout);\n        this.connect(this.model.properties.data_sources.change, function () { return _this._connect_sources(); });\n        this._connected = [];\n        this._connect_sources();\n    };\n    PlotlyPlotView.prototype._connect_sources = function () {\n        var _this = this;\n        var _loop_1 = function (i) {\n            var cds = this_1.model.data_sources[i];\n            if (this_1._connected.indexOf(cds.id) < 0) {\n                this_1.connect(cds.properties.data.change, function () { return _this._restyle(i); });\n                this_1._connected.push(cds.id);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.model.data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    PlotlyPlotView.prototype.render = function () {\n        _super.prototype.render.call(this);\n        if (!window.Plotly) {\n            return;\n        }\n        if (!this.model.data.length && !Object.keys(this.model.layout).length) {\n            window.Plotly.purge(this.el);\n        }\n        var data = [];\n        for (var i = 0; i < this.model.data.length; i++) {\n            data.push(this._get_trace(i, false));\n        }\n        window.Plotly.react(this.el, data, this.model.layout);\n    };\n    PlotlyPlotView.prototype._get_trace = function (index, update) {\n        var trace = object_1.clone(this.model.data[index]);\n        var cds = this.model.data_sources[index];\n        for (var _i = 0, _a = cds.columns(); _i < _a.length; _i++) {\n            var column = _a[_i];\n            var shape = cds._shapes[column][0];\n            var array = cds.get_array(column)[0];\n            if (shape.length > 1) {\n                var arrays = [];\n                for (var s = 0; s < shape[0]; s++) {\n                    arrays.push(array.slice(s * shape[1], (s + 1) * shape[1]));\n                }\n                array = arrays;\n            }\n            if (update) {\n                trace[column] = [array];\n            }\n            else {\n                trace[column] = array;\n            }\n        }\n        return trace;\n    };\n    PlotlyPlotView.prototype._restyle = function (index) {\n        if (!window.Plotly) {\n            return;\n        }\n        var trace = this._get_trace(index, true);\n        window.Plotly.restyle(this.el, trace, index);\n    };\n    PlotlyPlotView.prototype._relayout = function () {\n        if (!window.Plotly) {\n            return;\n        }\n        window.Plotly.relayout(this.el, this.model.layout);\n    };\n    return PlotlyPlotView;\n}(html_box_1.HTMLBoxView));\nexports.PlotlyPlotView = PlotlyPlotView;\nvar PlotlyPlot = /** @class */ (function (_super) {\n    __extends(PlotlyPlot, _super);\n    function PlotlyPlot(attrs) {\n        return _super.call(this, attrs) || this;\n    }\n    PlotlyPlot.initClass = function () {\n        this.prototype.type = \"PlotlyPlot\";\n        this.prototype.default_view = PlotlyPlotView;\n        this.define({\n            data: [p.Array, []],\n            layout: [p.Any, {}],\n            data_sources: [p.Array, []],\n        });\n    };\n    return PlotlyPlot;\n}(html_box_1.HTMLBox));\nexports.PlotlyPlot = PlotlyPlot;\nPlotlyPlot.initClass();\n", "deps": ["core/properties", "core/util/object", "models/layouts/html_box"], "hash": "434f9e165761d41701ed722ea8124c82f70aeac26bff92dad9d9c798ebaac16a"}