{"code": "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar markup_1 = require(\"models/widgets/markup\");\nfunction htmlDecode(input) {\n    var doc = new DOMParser().parseFromString(input, \"text/html\");\n    return doc.documentElement.textContent;\n}\nvar HTMLView = /** @class */ (function (_super) {\n    __extends(HTMLView, _super);\n    function HTMLView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HTMLView.prototype.render = function () {\n        _super.prototype.render.call(this);\n        var html = htmlDecode(this.model.text);\n        if (!html) {\n            this.markup_el.innerHTML = '';\n            return;\n        }\n        this.markup_el.innerHTML = html;\n        Array.from(this.markup_el.querySelectorAll(\"script\")).forEach(function (oldScript) {\n            var newScript = document.createElement(\"script\");\n            Array.from(oldScript.attributes)\n                .forEach(function (attr) { return newScript.setAttribute(attr.name, attr.value); });\n            newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n            if (oldScript.parentNode)\n                oldScript.parentNode.replaceChild(newScript, oldScript);\n        });\n    };\n    return HTMLView;\n}(markup_1.MarkupView));\nexports.HTMLView = HTMLView;\nvar HTML = /** @class */ (function (_super) {\n    __extends(HTML, _super);\n    function HTML(attrs) {\n        return _super.call(this, attrs) || this;\n    }\n    HTML.initClass = function () {\n        this.prototype.type = \"HTML\";\n        this.prototype.default_view = HTMLView;\n    };\n    return HTML;\n}(markup_1.Markup));\nexports.HTML = HTML;\nHTML.initClass();\n", "deps": ["models/widgets/markup"], "hash": "3ac12d869628107833b1ed1b3020aa78a1a1c1d620d96184ebdd8cf09fa6519c"}