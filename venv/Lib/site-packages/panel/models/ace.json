{"code": "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar p = require(\"core/properties\");\nvar html_box_1 = require(\"models/layouts/html_box\");\nvar dom_1 = require(\"core/dom\");\nfunction ID() {\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return '_' + Math.random().toString(36).substr(2, 9);\n}\nvar AcePlotView = /** @class */ (function (_super) {\n    __extends(AcePlotView, _super);\n    function AcePlotView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AcePlotView.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this._ace = window.ace;\n        this._container = dom_1.div({\n            id: ID(),\n            style: {\n                width: \"100%\",\n                height: \"100%\"\n            }\n        });\n    };\n    AcePlotView.prototype.connect_signals = function () {\n        var _this = this;\n        _super.prototype.connect_signals.call(this);\n        this.connect(this.model.properties.code.change, function () { return _this._update_code_from_model(); });\n        this.connect(this.model.properties.theme.change, function () { return _this._update_theme(); });\n        this.connect(this.model.properties.language.change, function () { return _this._update_language(); });\n        this.connect(this.model.properties.annotations.change, function () { return _this._add_annotations(); });\n        this.connect(this.model.properties.readonly.change, function () {\n            _this._editor.setReadOnly(_this.model.readonly);\n        });\n    };\n    AcePlotView.prototype.render = function () {\n        var _this = this;\n        _super.prototype.render.call(this);\n        if (!(this._container === this.el.childNodes[0]))\n            this.el.appendChild(this._container);\n        this._container.textContent = this.model.code;\n        this._editor = this._ace.edit(this._container.id);\n        this._editor.setTheme(\"ace/theme/\" + (\"\" + this.model.theme));\n        this._editor.session.setMode(\"ace/mode/\" + (\"\" + this.model.language));\n        this._editor.setReadOnly(this.model.readonly);\n        this._langTools = this._ace.require('ace/ext/language_tools');\n        this._editor.setOptions({\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n            fontFamily: \"monospace\",\n        });\n        this._editor.on('change', function () { return _this._update_code_from_editor(); });\n    };\n    AcePlotView.prototype._update_code_from_model = function () {\n        if (this._editor && this._editor.getValue() != this.model.code)\n            this._editor.setValue(this.model.code);\n    };\n    AcePlotView.prototype._update_code_from_editor = function () {\n        if (this._editor.getValue() != this.model.code) {\n            this.model.code = this._editor.getValue();\n        }\n    };\n    AcePlotView.prototype._update_theme = function () {\n        this._editor.setTheme(\"ace/theme/\" + (\"\" + this.model.theme));\n    };\n    AcePlotView.prototype._update_language = function () {\n        this._editor.session.setMode(\"ace/mode/\" + (\"\" + this.model.language));\n    };\n    AcePlotView.prototype._add_annotations = function () {\n        this._editor.session.setAnnotations(this.model.annotations);\n    };\n    AcePlotView.prototype.after_layout = function () {\n        _super.prototype.after_layout.call(this);\n        this._editor.resize();\n    };\n    return AcePlotView;\n}(html_box_1.HTMLBoxView));\nexports.AcePlotView = AcePlotView;\nvar AcePlot = /** @class */ (function (_super) {\n    __extends(AcePlot, _super);\n    function AcePlot(attrs) {\n        return _super.call(this, attrs) || this;\n    }\n    AcePlot.initClass = function () {\n        this.prototype.type = \"AcePlot\";\n        this.prototype.default_view = AcePlotView;\n        this.define({\n            code: [p.String],\n            language: [p.String, 'python'],\n            theme: [p.String, 'chrome'],\n            annotations: [p.Array, []],\n            readonly: [p.Boolean, false]\n        });\n        this.override({\n            height: 300,\n            width: 300\n        });\n    };\n    return AcePlot;\n}(html_box_1.HTMLBox));\nexports.AcePlot = AcePlot;\nAcePlot.initClass();\n", "deps": ["core/properties", "models/layouts/html_box", "core/dom"], "hash": "1cc96eb44abcac652a8d1df183e8bd8a476535c71c1498449443eeec37c8fc78"}