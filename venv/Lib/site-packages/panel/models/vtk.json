{"code": "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar p = require(\"core/properties\");\nvar object_1 = require(\"core/util/object\");\nvar html_box_1 = require(\"models/layouts/html_box\");\nvar dom_1 = require(\"core/dom\");\nvar VTKPlotView = /** @class */ (function (_super) {\n    __extends(VTKPlotView, _super);\n    function VTKPlotView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._setting = false;\n        return _this;\n    }\n    VTKPlotView.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this._vtk = window.vtk;\n        this._container = dom_1.div({\n            style: {\n                width: \"100%\",\n                height: \"100%\"\n            }\n        });\n    };\n    VTKPlotView.prototype.after_layout = function () {\n        var _this = this;\n        _super.prototype.after_layout.call(this);\n        if (!this._rendererEl) {\n            this._rendererEl = this._vtk.Rendering.Misc.vtkFullScreenRenderWindow.newInstance({\n                rootContainer: this.el,\n                container: this._container\n            });\n            this._renderer = this._rendererEl.getRenderer();\n            this._interactor = this._rendererEl.getInteractor();\n            this._camera = this._renderer.getActiveCamera();\n            this._plot();\n            this._camera.onModified(function () { return _this._get_camera_state(); });\n            this._key_binding();\n        }\n    };\n    VTKPlotView.prototype.connect_signals = function () {\n        var _this = this;\n        _super.prototype.connect_signals.call(this);\n        this.connect(this.model.properties.data.change, function () { return _this._plot(); });\n        this.connect(this.model.properties.camera.change, function () { return _this._set_camera_state(); });\n        this.connect(this.model.properties.enable_keybindings.change, function () { return _this._key_binding(); });\n    };\n    VTKPlotView.prototype._key_binding = function () {\n        if (this.model.enable_keybindings) {\n            document.querySelector('body').addEventListener('keypress', this._interactor.handleKeyPress);\n            document.querySelector('body').addEventListener('keydown', this._interactor.handleKeyDown);\n            document.querySelector('body').addEventListener('keyup', this._interactor.handleKeyUp);\n        }\n        else {\n            document.querySelector('body').removeEventListener('keypress', this._interactor.handleKeyPress);\n            document.querySelector('body').removeEventListener('keydown', this._interactor.handleKeyDown);\n            document.querySelector('body').removeEventListener('keyup', this._interactor.handleKeyUp);\n        }\n    };\n    VTKPlotView.prototype.render = function () {\n        _super.prototype.render.call(this);\n        if (!(this._container === this.el.childNodes[0]))\n            this.el.appendChild(this._container);\n    };\n    VTKPlotView.prototype._get_camera_state = function () {\n        if (!this._setting) {\n            this._setting = true;\n            var state = object_1.clone(this._camera.get());\n            delete state.classHierarchy;\n            delete state.vtkObject;\n            delete state.vtkCamera;\n            delete state.viewPlaneNormal;\n            this.model.camera = state;\n            this._setting = false;\n        }\n    };\n    VTKPlotView.prototype._set_camera_state = function () {\n        if (!this._setting) {\n            this._setting = true;\n            try {\n                this._camera.set(this.model.camera);\n            }\n            finally {\n                this._setting = false;\n            }\n            this._rendererEl.getRenderWindow().render();\n        }\n    };\n    VTKPlotView.prototype._plot = function () {\n        var _this = this;\n        if (!this.model.append) {\n            this._delete_all_actors();\n        }\n        if (!this.model.data) {\n            this._rendererEl.getRenderWindow().render();\n            return;\n        }\n        var dataAccessHelper = this._vtk.IO.Core.DataAccessHelper.get('zip', {\n            zipContent: atob(this.model.data),\n            callback: function (_zip) {\n                var sceneImporter = _this._vtk.IO.Core.vtkHttpSceneLoader.newInstance({\n                    renderer: _this._rendererEl.getRenderer(),\n                    dataAccessHelper: dataAccessHelper,\n                });\n                var fn = _this._vtk.macro.debounce(function () { return setTimeout(_this._rendererEl.getRenderWindow().render, 100); }, 100);\n                sceneImporter.setUrl('index.json');\n                sceneImporter.onReady(fn);\n            }\n        });\n    };\n    VTKPlotView.prototype._delete_all_actors = function () {\n        var _this = this;\n        this._renderer.getActors().map(function (actor) { return _this._renderer.removeActor(actor); });\n    };\n    return VTKPlotView;\n}(html_box_1.HTMLBoxView));\nexports.VTKPlotView = VTKPlotView;\nvar VTKPlot = /** @class */ (function (_super) {\n    __extends(VTKPlot, _super);\n    function VTKPlot(attrs) {\n        return _super.call(this, attrs) || this;\n    }\n    VTKPlot.initClass = function () {\n        this.prototype.type = \"VTKPlot\";\n        this.prototype.default_view = VTKPlotView;\n        this.define({\n            data: [p.String],\n            append: [p.Boolean, false],\n            camera: [p.Any],\n            enable_keybindings: [p.Boolean, false]\n        });\n        this.override({\n            height: 300,\n            width: 300\n        });\n    };\n    return VTKPlot;\n}(html_box_1.HTMLBox));\nexports.VTKPlot = VTKPlot;\nVTKPlot.initClass();\n", "deps": ["core/properties", "core/util/object", "models/layouts/html_box", "core/dom"], "hash": "a90f72eb44784582a23c241c6fd742f43b0eeaeb8930e35915faa96767e4c50c"}